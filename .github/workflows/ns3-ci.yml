name: Build and Release NS3 Usage Example

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GCC 13
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update
          sudo apt-get install -y g++-13 gcc-13
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
          g++ --version
          gcc --version

      - name: Install dependencies
        run: |
          sudo apt-get install -y \
            python3 python3-pip cmake \
            libsqlite3-dev libgtk-3-dev \
            qt5-default mercurial git zip

      - name: Cache NS-3
        uses: actions/cache@v4
        with:
          path: ns-3.39
          key: ${{ runner.os }}-ns3-${{ hashFiles('configure.sh') }}
          restore-keys: |
            ${{ runner.os }}-ns3-

      - name: Cache CMake build directory
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Make configure.sh executable
        run: chmod +x configure.sh

      - name: Run configuration script
        run: ./configure.sh

      - name: Configure with CMake
        run: cmake -B build -S .
        env:
          CXX: g++-13
          CC: gcc-13

      - name: Build with CMake
        run: cmake --build build

      - name: Archive build directory
        run: zip -r build.zip build

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip

